{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","getClassName","tab","cn","some","t","id","every","className","map","href","onClick","onClickHandler","title","find","content","App","useState","setSelectedTabId","selectedTab","activeTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAO,SAAC,GAEP,IAAD,EADXC,EACW,EADXA,KAAMC,EACK,EADLA,cAAeC,EACV,EADUA,cAQfC,EAAe,SAACC,GAAD,OAAcC,IAAG,CACpC,YAAcL,EAAKM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOP,MACnCG,EAAII,KAAOP,GACVG,EAAII,KAAOR,EAAK,GAAGQ,IAClBR,EAAKS,OAAM,SAAAF,GAAC,OAAIA,EAAEC,KAAOP,QAGhC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKS,UAAU,gBAAf,SACE,6BAEIV,EAAKW,KAAI,SAAAP,GAAG,OACV,oBAEEM,UAAWP,EAAaC,GACxB,UAAQ,MAHV,SAKE,mBACEQ,KAAI,WAAMR,EAAII,IACd,UAAQ,UACRK,QAAS,kBA3BF,SAACT,GAClBA,EAAII,KAAOP,GACbC,EAAcE,GAyBaU,CAAeV,IAHhC,SAKGA,EAAIW,SATFX,EAAII,WAiBnB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,mBACGV,EAAKgB,MAAK,SAAAZ,GAAG,OAAIA,EAAII,KAAOP,YAD/B,aACG,EAA4CgB,cC3C/CjB,EAAc,CAClB,CAAEQ,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASnB,EAAK,GAAGQ,IAA3D,mBAAOP,EAAP,KAAsBmB,EAAtB,KAMMC,EAAcrB,EAAKgB,MAAK,SAAAZ,GAAG,OAAIA,EAAII,KAAOP,KAEhD,OACE,sBAAKS,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0CACsBW,QADtB,IACsBA,OADtB,EACsBA,EAAaN,SAEnC,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeA,EACfC,cAdgB,SAACoB,GACrBF,EAAiBE,EAAUd,WCd/Be,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f1d03b4c.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Tab } from '../../types/tab';\n\ntype Props = {\n  tabs: Array<Tab>,\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs = ({\n  tabs, selectedTabId, onTabSelected,\n}: Props) => {\n  const onClickHandler = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  const getClassName = (tab: Tab) => cn({\n    'is-active': (tabs.some(t => t.id === selectedTabId)\n    && tab.id === selectedTabId)\n    || (tab.id === tabs[0].id\n      && tabs.every(t => t.id !== selectedTabId)),\n  });\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(tab => (\n              <li\n                key={tab.id}\n                className={getClassName(tab)}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => onClickHandler(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/tab';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (activeTab: Tab) => {\n    setSelectedTabId(activeTab.id);\n  };\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab?.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}